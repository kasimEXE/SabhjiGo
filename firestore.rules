rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Societies collection - read for authenticated users, write only for admins
    match /societies/{societyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Vendors collection - read for authenticated users, write only for admins
    match /vendors/{vendorId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Routes collection - read for authenticated users, write only for own vendor data
    match /routes/{routeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.token.vendorId != null &&
        request.resource.data.vendorId == request.auth.token.vendorId;
      allow update: if request.auth != null && 
        request.auth.token.vendorId != null &&
        resource.data.vendorId == request.auth.token.vendorId &&
        // Prevent changing vendorId on update
        request.resource.data.vendorId == resource.data.vendorId;
    }
    
    // Inventories collection - read for authenticated users, write only for own vendor data
    match /inventories/{inventoryId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        request.auth.token.vendorId != null &&
        request.resource.data.vendorId == request.auth.token.vendorId;
    }
    
    // Group shares collection - public read, restricted write
    match /groupShares/{shareCode} {
      allow read: if true; // Public read for sharing
      allow create: if request.auth != null && 
        (request.auth.token.admin == true || request.auth.token.vendorId != null);
      allow update, delete: if request.auth != null && 
        request.auth.token.admin == true;
    }
  }
}
